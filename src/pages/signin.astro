---
import { lbClient } from "@/scripts/localbaseClient";
import { getCurrentUser, signIn, supabase } from "../scripts/supabaseClient";

const { cookies, redirect } = Astro;

let errorMessage = "";
let successMessage = "";

if (!supabase) {
  console.error("Supabase client is not initialized");
  errorMessage = "Unable to connect to the authentication service";
}

const accessToken = cookies.get("sb-access-token");
const refreshToken = cookies.get("sb-refresh-token");

if (accessToken && refreshToken) {
  return redirect("/profile");
}

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const email = formData.get("email")?.toString();
    const password = formData.get("password")?.toString();

    // input validation
    if (!email || !password) {
      errorMessage = "Email and password are required";
      return;
    }

    // Signin into supabase
    const { data, error } = await signIn(email, password);

    // error checking
    if (error) {
      console.error("Supabase error:", error);
      errorMessage = error.message;
    } else if (data?.user) {
      const { access_token, refresh_token } = data.session;

      // store user details locally (IndexDB).
      lbClient.collection("user").add(data);

      // store session cookie
      cookies.set("sb-access-token", access_token, {
        path: "/",
      });
      cookies.set("sb-refresh-token", refresh_token, {
        path: "/",
      });

      return Astro.redirect("/home");
    } else {
      console.error("Unexpected response:", data);
      errorMessage = "An unexpected error occurred";
    }
  } catch (e) {
    console.error("Error processing form:", e);
    errorMessage = "An error occurred while processing your request";
  }
}

// Check if user is already signed in
const user = await getCurrentUser();
if (!Object.is(user, null)) {
  return Astro.redirect("/home");
}

// const accessToken = cookies.get("sb-access-token");
// const refreshToken = cookies.get("sb-refresh-token");

// if (accessToken && refreshToken) {
//   return redirect("/dashboard");
---

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Sign In - Artistry</title>
    <link
      href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css"
      rel="stylesheet"
    />
  </head>
  <body class="bg-gray-900 text-gray-100 min-h-screen">
    <div class="min-h-screen flex">
      <!-- Left Panel -->
      <div class="hidden lg:flex lg:w-1/2 relative">
        <img
          src="https://hebbkx1anhila5yf.public.blob.vercel-storage.com/v.jpg-ydWkhWo49Rw8uMczjXcIIplumFjdPw.jpeg"
          alt="Sign In"
          class="absolute inset-0 w-full h-full object-cover"
        />
        <div
          class="absolute inset-0 bg-gradient-to-r from-gray-900 to-transparent"
        >
        </div>
        <div class="relative z-10 flex items-center justify-center w-full">
          <div class="px-12">
            <h2 class="text-4xl font-bold mb-4">Welcome Back</h2>
            <p class="text-xl text-gray-300">
              Continue your creative journey with Artistry
            </p>
          </div>
        </div>
      </div>

      <!-- Right Panel -->
      <div class="w-full lg:w-1/2 flex items-center justify-center p-8">
        <div class="max-w-md w-full">
          <div class="text-center mb-8">
            <a href="/" class="text-2xl font-bold">Artistry</a>
            <h2 class="mt-6 text-3xl font-bold">Sign in to your account</h2>
          </div>

          {
            errorMessage && (
              <div class="bg-red-500 text-white p-3 rounded mb-4">
                {errorMessage}
              </div>
            )
          }

          {
            successMessage && (
              <div class="bg-green-500 text-white p-3 rounded mb-4">
                {successMessage}
              </div>
            )
          }

          <form
            action=""
            method="post"
            enctype="application/x-www-form-urlencoded"
            class="space-y-6"
          >
            <div>
              <label for="email" class="block text-sm font-medium text-gray-300"
                >Email address</label
              >
              <input
                id="email"
                name="email"
                type="email"
                required
                class="mt-1 block w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-gray-100 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
              />
            </div>

            <div>
              <label
                for="password"
                class="block text-sm font-medium text-gray-300">Password</label
              >
              <input
                id="password"
                name="password"
                type="password"
                required
                class="mt-1 block w-full px-3 py-2 bg-gray-800 border border-gray-700 rounded-md text-gray-100 placeholder-gray-500 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-transparent"
              />
            </div>

            <div class="flex items-center justify-between">
              <div class="flex items-center">
                <input
                  id="remember-me"
                  name="remember-me"
                  type="checkbox"
                  class="h-4 w-4 bg-gray-800 border-gray-700 rounded text-indigo-600 focus:ring-indigo-500"
                />
                <label
                  for="remember-me"
                  class="ml-2 block text-sm text-gray-300">Remember me</label
                >
              </div>

              <div class="text-sm">
                <a
                  href="#"
                  class="font-medium text-indigo-400 hover:text-indigo-300"
                  >Forgot your password?</a
                >
              </div>
            </div>

            <div>
              <button
                type="submit"
                class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
              >
                Sign in
              </button>
            </div>
          </form>

          <div class="mt-6">
            <div class="relative">
              <div class="absolute inset-0 flex items-center">
                <div class="w-full border-t border-gray-700"></div>
              </div>
              <div class="relative flex justify-center text-sm"></div>
            </div>

            <p class="mt-8 text-center text-sm text-gray-400">
              Not a member?
              <a
                href="/signup"
                class="font-medium text-indigo-400 hover:text-indigo-300"
                >Sign up now</a
              >
            </p>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>
